/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        
        ListNode *result = new ListNode();
        ListNode *r=  result;
        ListNode *first = r; //first用來記錄一開始的位址，否則之後找不回來(因r會變動)
        
        while(l1 && l2){

            if(l1->val <= l2->val){
                r->next = new ListNode(l1->val);
                l1 = l1->next;          
            }
            else {
                r->next = new ListNode(l2->val);
                l2 = l2->next;          
            }
            r = r->next;
        }
        if(l1)
            r->next = l1;
            // 若l1還有，l2沒有，則l1全部加入r
            // 為啥可以直接加入?
            // 因前面while已比過大小，此時剩下的l1，必定是比較大的數
        if(l2)
            r->next = l2;
     
        return first->next;
        
    }
};
